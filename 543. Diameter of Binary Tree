/**********
543. Diameter of Binary Tree

Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the 
length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

Note:The length of path between two nodes is represented by the number of edges between them.
**********/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) {
        if(root){
            int a = depth(root->left) + depth(root->right);
            int b = diameterOfBinaryTree(root->left);
            int c = diameterOfBinaryTree(root->right);
            return max(max(a, b), c);
        }
        return 0;
    }
    int depth(TreeNode* root){
        if(root){
            int a = depth(root->left);
            int b = depth(root->right);
            return 1 + (a<b?b:a);
        }
        return 0;
    }
};
