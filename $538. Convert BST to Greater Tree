/**********
538. Convert BST to Greater Tree

Given a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to 
the original key plus sum of all keys greater than the original key in BST.
**********/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* convertBST(TreeNode* root) {
        if(root){
            int sum=0;
            DFS(root, sum);
        }
        return root;
    }
    void DFS(TreeNode* root, int &sum){
        if(root){
            DFS(root->right, sum);
            root->val += sum;
            sum = root->val;
            DFS(root->left, sum);  
        }
    }
};
