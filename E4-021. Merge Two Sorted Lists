/**********
21. Merge Two Sorted Lists

Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes 
of the first two lists.
**********/

// 12ms
ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
    ListNode *head = new ListNode(-1);
    ListNode *pre = head;
    while(l1 && l2) {
        if(l1->val < l2->val) {
            pre->next = l1;
            l1 = l1->next;
        }
        else {
            pre->next = l2;
            l2 = l2->next;
        }
        pre = pre->next;
    };
    pre->next = l1?l1:l2;
    return head->next; 
}

# 24ms
class Solution:
    def mergeTwoLists(self, l1, l2):
        pre_head = ListNode(-1)
        pre = pre_head
        while l1 and l2:
            if l1.val <= l2.val:
                pre.next = l1
                l1 = l1.next
            else:
                pre.next = l2
                l2 = l2.next
            pre = pre.next
        pre.next = l1 if l1 else l2
        return pre_head.next
