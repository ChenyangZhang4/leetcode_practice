/**********
28. Implement strStr()

Implement strStr().

Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

Example 1:
Input: haystack = "hello", needle = "ll"
Output: 2

Example 2:
Input: haystack = "aaaaa", needle = "bba"
Output: -1

Clarification:
What should we return when needle is an empty string? This is a great question to ask during an interview.

For the purpose of this problem, we will return 0 when needle is an empty string. This is consistent to C's strstr() and Java's indexOf().
**********/

//4ms
int strStr(string haystack, string needle) {
    if(needle=="")
        return 0;
    if(haystack.size()<needle.size())
        return -1;
    for(int i=0; i<=haystack.size()-needle.size(); i++){
        if(haystack[i]==needle[0]){
            for(int j=i, k=0; k<needle.size(); j++, k++){
                if(haystack[j]!=needle[k])
                    break;
                if(k==needle.size()-1)
                    return i;
            }
        }
    }
    return -1;
}

# 28ms
def strStr(haystack, needle):
    # return haystack.find(needle)

    # if not needle:
    #     return 0
    # for i in range(len(haystack)-len(needle)+1):
    #     if haystack[i] == needle[0]:
    #         j=1
    #         while j<len(needle) and haystack[i+j] == needle[j]:
    #             j+=1
    #         if j== len(needle):
    #             return i
    # return -1

    for i in range(len(haystack)-len(needle)+1):
        if haystack[i:i+len(needle)] == needle:
            return i
    return -1
