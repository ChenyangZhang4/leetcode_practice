/**********
189. Rotate Array

Given an array, rotate the array to the right by k steps, where k is non-negative.

Example 1:
Input: [1,2,3,4,5,6,7] and k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
**********/

//16ms. O(k) space.
void rotate(vector<int>& nums, int k) {
    vector<int> temp;
    int len = nums.size();
    k = k % len;                    //Make k less equal than len.
    for(int i=len-k; i<len; i++){
        temp.push_back(nums[i]);
    }
    for(int i=len-1; i>=k; i--){
        nums[i] = nums[i-k];
    }
    for(int i=0; i<k; i++){
        nums[i] = temp[i];
    }
}

//16ms. O(1) space.
void rotate(vector<int>& nums, int k) {
    int n = k%nums.size();
    reverse(nums.begin(), nums.end());
    reverse(nums.begin(), nums.begin() + n);
    reverse(nums.begin() + n, nums.end());
}

# 44ms
def rotate(nums, k):
    k = k % len(nums)
    if k > 0:
        nums[:k], nums[k:] = nums[-k:], nums[:-k]
