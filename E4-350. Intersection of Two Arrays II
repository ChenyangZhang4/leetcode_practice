/**********
350. Intersection of Two Arrays II

Given two arrays, write a function to compute their intersection.

Example 1:
Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2,2]

Example 2:
Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [4,9]

Note:
Each element in the result should appear as many times as it shows in both arrays.
The result can be in any order.
**********/

//4ms
vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
    sort(nums1.begin(), nums1.end());
    sort(nums2.begin(), nums2.end());
    int i=0, j=0;
    vector<int> ret;
    while(i<nums1.size() && j<nums2.size()){
        if(nums1[i]==nums2[j]){
            ret.push_back(nums1[i]);
            i++;
            j++;
        }
        else if(nums1[i]<nums2[j])
            i++;
        else
            j++;
    }
    return ret;
}

# 44ms
def intersect(nums1, nums2):
    hashList = {}
    for num in nums1:
        hashList[num] = hashList.get(num, 0)+1
    res = []
    for num in nums2:
        if num in hashList:
            if hashList[num] != 0:
                hashList[num] -= 1
                res.append(num)
        return res
        
def intersect(nums1, nums2):
    nums1.sort()
    nums2.sort()
    ret = []
    i = 0
    j = 0
    while i < len(nums1) and j < len(nums2):
        if nums1[i] > nums2[j]:
            j += 1
        elif nums1[i] < nums2[j]:
            i += 1
        else:
            ret.append(nums1[i])
            i += 1
            j += 1
    return ret
