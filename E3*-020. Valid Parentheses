/**********
20. Valid Parentheses

Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.
**********/

//0ms. This problem is not simple, the testcase can be "]" or "([)]". 
bool isValid(string s) {
    stack<char> st;
    for(char &c : s){
        if(c=='(' || c=='[' || c=='{')
            st.push(c);
        else if(c==')'){
            if(!st.empty() && st.top()=='(')
                st.pop();
            else
                return false;
        }
        else if(c==']'){
            if(!st.empty() && st.top()=='[')
                st.pop();
            else
                return false;
        }
        else if(c=='}'){
            if(!st.empty() && st.top()=='{')
                st.pop();
            else
                return false;
        }
    }
    if(st.empty())
        return true;
    else
        return false;
}
