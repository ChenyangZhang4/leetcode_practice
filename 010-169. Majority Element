/**********
169. Majority Element

Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.
**********/

int majorityElement(vector<int>& nums) {
    map<int, int> counts;
    int n = nums.size();
    for (int i = 0; i < n; i++)
        if (++counts[nums[i]] > n / 2)
            return nums[i];
    return 0;
}

//The time of this solution is equal to above 
int majorityElement(vector<int>& nums) {
    int res=nums[0];
    int n=1;
    for(int i=1; i<nums.size(); i++){
        if(n==0){               //only use one if-structure can save time
            res=nums[i];
            n++;
        }
        else if(nums[i]!=res)
            n--;
        else
            n++;
    }
    return res;
}
